{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"OpenAPI : https://galileocloud.goeasyproject.eu/serengeti/api/v1/docs Documentation : https://acutaia.github.io/goeasy-serengeti/ Source Code : https://github.com/acutaia/goeasy-serengeti The project \ud83d\udef0 The GOEASY project will provide the technical and business foundations to enable a new generation of trusted and dependable mass-market Location Based Services and Applications to engage, stimulate and reward citizens for more sustainable behaviours and healthier choices. This three-years project contributes to the consolidation of an environmentally aware and engaged public community in the EU, while delivering added value innovative solutions for Location Based Services and opening new scenarios and opportunities for Smart City solutions (by enabling innovative LBS and IoT services). The research outputs are relevant for EU citizens lives, promoting a healthier environment, increasing sustainability in cities, creating employment opportunities and improving existing technologies. GNSS user technology is now widely available in mass market devices including personal devices, connected vehicles, Internet of Things (IoT) objects, etc. The widespread availability of GNSS receivers, joint with ubiquitous communication capabilities of devices and the ability of cloud-based ICT platforms to federate with each other through open standards and APIs, is enabling a new generation of Location Based Services (LBS) able to support highly-scalable pervasive applications where large number of geographically-distributed users are engaged e.g. in immersive games and commercial services. While GNSS proves to be able to support such applications successfully, a major drawback prevents such approach to be used in more serious (and potentially highly rewarding) mass market applications i.e. the lack of authentication features, resulting in high difficulties in preventing users from spoofing position information to gain advantages or damage other users. GOEASY will be evaluated by means of two concrete use cases, namely the ApesMobility and the AsthmaWatch, both evaluated engaging real users in a medium-scale pilot in Torino (Italy) and Stockholm (Sweden).","title":"GoEasy"},{"location":"#the-project","text":"The GOEASY project will provide the technical and business foundations to enable a new generation of trusted and dependable mass-market Location Based Services and Applications to engage, stimulate and reward citizens for more sustainable behaviours and healthier choices. This three-years project contributes to the consolidation of an environmentally aware and engaged public community in the EU, while delivering added value innovative solutions for Location Based Services and opening new scenarios and opportunities for Smart City solutions (by enabling innovative LBS and IoT services). The research outputs are relevant for EU citizens lives, promoting a healthier environment, increasing sustainability in cities, creating employment opportunities and improving existing technologies. GNSS user technology is now widely available in mass market devices including personal devices, connected vehicles, Internet of Things (IoT) objects, etc. The widespread availability of GNSS receivers, joint with ubiquitous communication capabilities of devices and the ability of cloud-based ICT platforms to federate with each other through open standards and APIs, is enabling a new generation of Location Based Services (LBS) able to support highly-scalable pervasive applications where large number of geographically-distributed users are engaged e.g. in immersive games and commercial services. While GNSS proves to be able to support such applications successfully, a major drawback prevents such approach to be used in more serious (and potentially highly rewarding) mass market applications i.e. the lack of authentication features, resulting in high difficulties in preventing users from spoofing position information to gain advantages or damage other users. GOEASY will be evaluated by means of two concrete use cases, namely the ApesMobility and the AsthmaWatch, both evaluated engaging real users in a medium-scale pilot in Torino (Italy) and Stockholm (Sweden).","title":"The project \ud83d\udef0"},{"location":"deployment/","text":"","title":"Deployment"},{"location":"serengeti/Administration_API/","text":"This SERENGETI endpoint provides ways to let administrators to request for accounting information collected by the platform on the IOTA network. This interface enables maintenance activities by allowing to monitor the platform usage, encountered anomalies and unauthorized services requests. Within the API boundaries, it is possible to parametrize requests by selecting timeframes and sources of interests. The following diagram shows the final software design of the accounting data extraction service from the SERENGETI perspective.","title":"Administration API"},{"location":"serengeti/Data_Authentication_API/","text":"This SERENGETI endpoint provides ways to let users and applications to request for position data authentication services without the exploitation of other GEP features, such as the persistent collection. The following diagram shows the final software design of the authentication service from the SERENGETI perspective. It shows the main steps performed by the deployed software running on the cloud platform. The first step of SERENGETI , for all the endpoints developed, is to verify with the Security Framework policy if the bearer token, OAuth2 compliant, provided in the request is granted by all the authorization rules applied on the client requesting the service. In addition, the json payload injected is verified and sanitized within the schema allowed boundaries of the specific service. The activities quoted are an essential step to guarantee security requirements on the cloud platform. To increase feature modularity, these steps are performed by a sub-component called Access worker. In case of unauthorized users or data inconsistency, the data is dropped, and it will be returned to the requester an error message. In the background, a dedicated worker collects resource usage and other information such as requests sources and data consistency to enable both monitoring and maintenance of the platform. In the meanwhile, the given positions are analysed to properly select the reference system of interest. To safely interact with the remote system, managed by the U-Blox API, SERENGETI punctually obtain a valid token from Keycloak. These credentials are used to retrieve authenticated reference values to be used by the cloud algorithms to verify position trustiness. The position Alteration Library triggers the authentication process for each position received and set the authenticity flag accordingly. At the end of the process the overall results are given to the requester.","title":"Data Authentication API"},{"location":"serengeti/Data_Extraction_API/","text":"This SERENGETI endpoint provides ways to let external users and applications to request for information collected on the platform. This interface enables external organization to gather aggregated meta-data on citizens' mobility. Within the API boundaries, it is possible to parametrize requests by selecting timeframes, area of interests, mobility types and other details. To preserve user\u2019s privacy, it has been defined a lower threshold for the area selected. In addition, it has been enabled the possibility to extract, with other requests, the list of positions for the collected journeys. The design process of the data extraction API is the result of the collaboration between project partners and stakeholders. The following diagram shows the final software design of the data extraction service from the SERENGETI perspective. In principle, the main role of SERENGETI , concerning the extraction API, is to behave as a secure application proxy between external requesters, and the Private Database of the GOEASY Platform.","title":"Data Extraction API"},{"location":"serengeti/Data_Feeding_API/","text":"This SERENGETI endpoint provides a unique point of access to let external users and applications to send standardized data through a JSON payload via https POST requests. After the security framework approval, it responds by embedding a unique, random, and anonymous id, generated on the cloud, for the specific track provided. Finally, the content of the message received is parsed and sanitized. The logic developed enables the reception of a set of locations embedding Galileo raw data. It requires the presence of the entire Galileo navigation messages received while the external devices were computing their positions. The latitude and longitude of the list of positions received are extracted by the Reference System Manager library and exploited for the proper selection of the U-Blox Reference System instance. This necessity is due to the different visibility of Galileo satellites over the deployments considered on the project. Consequently, one or multiple reference system cloned instances must be considered at country level to provide the proper information to the position authentication algorithm for a given list of positions. After the selection of the remote U-Blox reference platform of interest, it triggers a set of requests collecting the necessary reference data to be exploited for the identification of the attacks. Accumulated data are then given to the End-to-End Position Authentication (E2EA) worker to finalize the process in charge on the e-Security infrastructure. The track id is stored on the Private Database, but the GOEASY Platform, by exploiting Keycloak, and the anonymization process is not able to link it with a specific user. Because of the quoted approaches, only the specific client, through an authorized application collects the list of tracks belonged to him, for future exploitations.","title":"Data Feeding API"},{"location":"serengeti/Data_Inspection_API/","text":"This SERENGETI endpoint provides ways to let external users and applications to request for mobility behaviour detection information with respect to a given track id. After the security framework approval, it parses and sanitize the provided input, forward the request within the Federated API provided by the Privacy Aware DBMS system. The quoted system asynchronously oversees the update of the latest entries collected on the Public Database with the features provided by the Dependable LBS components and the mobility behaviour detection system. The values returned by the Data Access Manager are given back to the user through the https response within the timeout threshold of the standard. The following diagram shows the final software design of the Mobility Behaviour Detection service from the SERENGETI perspective. In conclusion, the first step of SERENGETI is managed by the Access Worker, by exploiting a specific security configuration for the credentials applied on the API. It later exploits a forwarding logic by acting as an application proxy that interconnects the other cloud services. In the background, the accounting worker still collects resource usage and other information to be encrypted and stored on the IOTA network.","title":"Data Inspection API"},{"location":"serengeti/overview/","text":"The SEcure tRusted collEction aNd exchanGE of posiTion Information ( SERENGETI ) software component is the main point of access of the GOEASY platform. It provides REST based OAuth2 secured endpoints to enable authorized users and software to interact with the GEP features. In addition to the application proxy features, it allows to feed the platform with personal tracking data collected by the Trusted GOEASY Devices (such as the Smartphones running the ApesMobility application), to be authenticated, anonymize, and stored on a Private Database. The overall endpoints offered by the current software are mainly divided as follows: Data Feeding API Data Authentication API Data Inspection API Data Extraction API Administration API","title":"Overview"}]}